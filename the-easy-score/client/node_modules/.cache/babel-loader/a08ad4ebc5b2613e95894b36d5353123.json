{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sam4munro/Desktop/webdev/portfolio/easyscore/the-easy-score/src/screens/contact/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { Card, Form, Button } from \"react-bootstrap\";\nimport { setNavStyle, setFooterStyle } from \"../../actions/index\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport \"./Contact.css\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Alert;\nconst initialFormValues = {\n  name: \"\",\n  email: \"\",\n  subject: \"\",\n  message: \"\"\n};\nlet vertical = \"bottom\";\nlet horizontal = \"left\";\n\nconst Contact = props => {\n  _s();\n\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [errorOpen, setErrorOpen] = useState(false);\n  const [successOpen, setSuccessOpen] = useState(false);\n  useEffect(() => {\n    props.setNavStyle(3);\n    props.setFooterStyle(3); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleChange = e => {\n    setFormValues({ ...formValues,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleChangeMessage = e => {\n    setFormValues({ ...formValues,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const sendEmail = () => {\n    axios.post(\"/send\", { ...formValues\n    }).then(res => {\n      setFormValues(initialFormValues);\n      setSuccessOpen(true);\n    }).catch(err => {\n      setFormValues(initialFormValues);\n      setErrorOpen(true);\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    sendEmail();\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setErrorOpen(false);\n    setSuccessOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5 contact-container\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"row w-100 p-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mt-15\",\n          children: \"Contact Us.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter Name\",\n              onChange: handleChange,\n              name: \"name\",\n              value: formValues.name,\n              className: \"form-padding\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Let us know who we're talking to.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\",\n              onChange: handleChange,\n              name: \"email\",\n              value: formValues.email,\n              className: \"form-padding\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"We never share your email with anyone.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter Subject\",\n              onChange: handleChange,\n              name: \"subject\",\n              value: formValues.subject,\n              className: \"form-padding\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Please provide a subejct.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Leave us a message\",\n            multiline: true,\n            rows: 8,\n            fullWidth: true,\n            variant: \"outlined\",\n            onChange: handleChangeMessage,\n            name: \"message\",\n            value: formValues.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"contactTextArea contactBtn\",\n            variant: \"primary\" // onClick={handleSubmit}\n            ,\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n            anchorOrigin: {\n              vertical,\n              horizontal\n            },\n            severity: \"success\",\n            open: successOpen,\n            autoHideDuration: 2000,\n            onClose: handleClose,\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              onClose: handleClose,\n              severity: \"success\",\n              children: \"Success! Thank you for your message!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n            anchorOrigin: {\n              vertical,\n              horizontal\n            },\n            open: errorOpen,\n            autoHideDuration: 2000,\n            onClose: handleClose,\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"error\",\n              onClose: handleClose,\n              children: \"There was an error making your request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contact, \"tZ8b0yeCBGsumLWznT76YnfTk3s=\");\n\n_c2 = Contact;\n\nconst mapStateToProps = state => {\n  return {\n    navStyle: state.navStyle,\n    footerStyle: state.footerStyle\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNavStyle,\n  setFooterStyle\n})(Contact);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"Contact\");","map":{"version":3,"sources":["/Users/sam4munro/Desktop/webdev/portfolio/easyscore/the-easy-score/src/screens/contact/Contact.js"],"names":["React","useState","useEffect","axios","connect","Card","Form","Button","setNavStyle","setFooterStyle","TextField","Snackbar","MuiAlert","Alert","props","initialFormValues","name","email","subject","message","vertical","horizontal","Contact","formValues","setFormValues","errorOpen","setErrorOpen","successOpen","setSuccessOpen","handleChange","e","target","value","handleChangeMessage","sendEmail","post","then","res","catch","err","handleSubmit","preventDefault","handleClose","event","reason","mapStateToProps","state","navStyle","footerStyle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { Card, Form, Button } from \"react-bootstrap\";\nimport { setNavStyle, setFooterStyle } from \"../../actions/index\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport \"./Contact.css\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst initialFormValues = {\n  name: \"\",\n  email: \"\",\n  subject: \"\",\n  message: \"\",\n};\n\nlet vertical = \"bottom\";\nlet horizontal = \"left\";\n\nconst Contact = (props) => {\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [errorOpen, setErrorOpen] = useState(false);\n  const [successOpen, setSuccessOpen] = useState(false);\n  useEffect(() => {\n    props.setNavStyle(3);\n    props.setFooterStyle(3);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleChange = (e) => {\n    setFormValues({\n      ...formValues,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleChangeMessage = (e) => {\n    setFormValues({\n      ...formValues,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const sendEmail = () => {\n    axios\n      .post(\"/send\", { ...formValues })\n      .then((res) => {\n        setFormValues(initialFormValues);\n        setSuccessOpen(true);\n      })\n      .catch((err) => {\n        setFormValues(initialFormValues);\n        setErrorOpen(true);\n      });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    sendEmail();\n  };\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setErrorOpen(false);\n    setSuccessOpen(false);\n  };\n\n  return (\n    <div className=\"container mt-5 contact-container\">\n      <Card className=\"row w-100 p-5\">\n        <div className=\"col\">\n          <h2 className=\"mt-15\">Contact Us.</h2>\n          <Form onSubmit={handleSubmit}>\n            <br />\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Name\"\n                onChange={handleChange}\n                name=\"name\"\n                value={formValues.name}\n                className=\"form-padding\"\n              />\n              <Form.Text className=\"text-muted\">\n                Let us know who we're talking to.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                onChange={handleChange}\n                name=\"email\"\n                value={formValues.email}\n                className=\"form-padding\"\n              />\n              <Form.Text className=\"text-muted\">\n                We never share your email with anyone.\n              </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Subject</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Subject\"\n                onChange={handleChange}\n                name=\"subject\"\n                value={formValues.subject}\n                className=\"form-padding\"\n              />\n              <Form.Text className=\"text-muted\">\n                Please provide a subejct.\n              </Form.Text>\n            </Form.Group>\n            <br />\n            <TextField\n              label=\"Leave us a message\"\n              multiline\n              rows={8}\n              fullWidth={true}\n              variant=\"outlined\"\n              onChange={handleChangeMessage}\n              name=\"message\"\n              value={formValues.message}\n            />\n            <Button\n              className=\"contactTextArea contactBtn\"\n              variant=\"primary\"\n              // onClick={handleSubmit}\n              type=\"submit\"\n            >\n              Send\n            </Button>\n            <Snackbar\n              anchorOrigin={{ vertical, horizontal }}\n              severity=\"success\"\n              open={successOpen}\n              autoHideDuration={2000}\n              onClose={handleClose}\n            >\n              <Alert onClose={handleClose} severity=\"success\">\n                Success! Thank you for your message!\n              </Alert>\n            </Snackbar>\n            <Snackbar\n              anchorOrigin={{ vertical, horizontal }}\n              open={errorOpen}\n              autoHideDuration={2000}\n              onClose={handleClose}\n            >\n              <Alert severity=\"error\" onClose={handleClose}>\n                There was an error making your request\n              </Alert>\n            </Snackbar>\n          </Form>\n        </div>\n      </Card>\n      <br />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    navStyle: state.navStyle,\n    footerStyle: state.footerStyle,\n  };\n};\n\nexport default connect(mapStateToProps, { setNavStyle, setFooterStyle })(\n  Contact\n);\n"]},"metadata":{},"sourceType":"module"}