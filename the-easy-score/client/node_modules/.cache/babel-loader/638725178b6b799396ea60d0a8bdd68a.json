{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sam4munro/Desktop/webdev/portfolio/easyscore/the-easy-score/src/screens/coursepage/components/ProfessorCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ScoreDoughnut from \"./ScoreDoughnut\";\nimport GradeDistChart2 from \"./GradeDistChart2\";\nimport { Card } from \"react-bootstrap\";\nimport \"../course.css\";\n\nconst ProfessorCard = ({\n  instructor,\n  index\n}) => {\n  _s();\n\n  const pixels = {\n    width: 250,\n    height: 150\n  };\n  const [transformedName, setTransformedName] = useState(instructor.name);\n  const [displayDays, setDisplayDays] = useState(false);\n  useEffect(() => {\n    transformProfessorName(instructor.name);\n    instructor.timings[1].length > 0 ? setDisplayDays(true) : setDisplayDays(false);\n  }, [instructor]);\n\n  const transformProfessorName = instructorName => {\n    const nameArray = instructorName.split(\",\");\n    const firstName = nameArray[0];\n    const lastNameString = nameArray[1];\n    const lastNameInitial = lastNameString.charAt(0);\n    setTransformedName(`${firstName}, ${lastNameInitial}.`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"container professor-card-container w-100 mb-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row w-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-xs-12 top-half\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row w-100 profName\",\n          children: [transformedName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row w-100 profYears\",\n          children: instructor.years_taught\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row w-100 mobile-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col doughnut\",\n            children: [/*#__PURE__*/_jsxDEV(ScoreDoughnut, {\n              easyScore: instructor.rating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col text-block\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-small-text\",\n                children: [\"Semesters Taught: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: instructor.semesters_taught\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-small-text\",\n                children: [\"Avg. Class Size:\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: instructor.average_number_of_students\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-small-text\",\n                children: [\"Avail. Next Term:\", \" \", instructor.is_teaching_next_semester === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"card-small-text\",\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"card-small-text\",\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Yes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), instructor.is_teaching_next_semester === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-small-text\",\n                children: [\"Days:\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: displayDays ? instructor.timings[1].map(timings => {\n                    return `${timings} `;\n                  }) : \"unavailable\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-xs-12 d-flex justify-content-center align-items-center bottom-half\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart\",\n          children: /*#__PURE__*/_jsxDEV(GradeDistChart2, {\n            average_grades: instructor.average_grades,\n            pixels: pixels\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfessorCard, \"lXlp4ROEZJta7pBcpfVx2ygxn7U=\");\n\n_c = ProfessorCard;\nexport default ProfessorCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfessorCard\");","map":{"version":3,"sources":["/Users/sam4munro/Desktop/webdev/portfolio/easyscore/the-easy-score/src/screens/coursepage/components/ProfessorCard.js"],"names":["React","useEffect","useState","ScoreDoughnut","GradeDistChart2","Card","ProfessorCard","instructor","index","pixels","width","height","transformedName","setTransformedName","name","displayDays","setDisplayDays","transformProfessorName","timings","length","instructorName","nameArray","split","firstName","lastNameString","lastNameInitial","charAt","years_taught","rating","semesters_taught","average_number_of_students","is_teaching_next_semester","map","average_grades"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ScoreDoughnut from \"./ScoreDoughnut\";\nimport GradeDistChart2 from \"./GradeDistChart2\";\n\nimport { Card } from \"react-bootstrap\";\n\nimport \"../course.css\";\n\nconst ProfessorCard = ({ instructor, index }) => {\n  const pixels = {\n    width: 250,\n    height: 150,\n  };\n\n  const [transformedName, setTransformedName] = useState(instructor.name);\n  const [displayDays, setDisplayDays] = useState(false);\n\n  useEffect(() => {\n    transformProfessorName(instructor.name);\n    instructor.timings[1].length > 0\n      ? setDisplayDays(true)\n      : setDisplayDays(false);\n  }, [instructor]);\n\n  const transformProfessorName = (instructorName) => {\n    const nameArray = instructorName.split(\",\");\n    const firstName = nameArray[0];\n    const lastNameString = nameArray[1];\n    const lastNameInitial = lastNameString.charAt(0);\n    setTransformedName(`${firstName}, ${lastNameInitial}.`);\n  };\n\n  return (\n    <Card className=\"container professor-card-container w-100 mb-5\">\n      <div className=\"row w-100\">\n        <div className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-xs-12 top-half\">\n          <div className=\"row w-100 profName\">{transformedName} </div>\n          <div className=\"row w-100 profYears\">{instructor.years_taught}</div>\n          <div className=\"row w-100 mobile-row\">\n            <div className=\"col doughnut\">\n              <ScoreDoughnut easyScore={instructor.rating} />\n\n              <div className=\"col text-block\">\n                <div className=\"card-small-text\">\n                  Semesters Taught: <b>{instructor.semesters_taught}</b>\n                </div>\n                <div className=\"card-small-text\">\n                  Avg. Class Size:{\" \"}\n                  <b>{instructor.average_number_of_students}</b>\n                </div>\n                <div className=\"card-small-text\">\n                  Avail. Next Term:{\" \"}\n                  {instructor.is_teaching_next_semester === 0 ? (\n                    <span className=\"card-small-text\">\n                      <b>No</b>\n                    </span>\n                  ) : (\n                    <span className=\"card-small-text\">\n                      <b>Yes</b>\n                    </span>\n                  )}\n                </div>\n                {instructor.is_teaching_next_semester === 1 ? (\n                  <div className=\"card-small-text\">\n                    Days:{\" \"}\n                    <b>\n                      {displayDays\n                        ? instructor.timings[1].map((timings) => {\n                            return `${timings} `;\n                          })\n                        : \"unavailable\"}\n                    </b>\n                  </div>\n                ) : null}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* SECOND HALF */}\n        <div className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-xs-12 d-flex justify-content-center align-items-center bottom-half\">\n          <div className=\"chart\">\n            <GradeDistChart2\n              average_grades={instructor.average_grades}\n              key={index}\n              pixels={pixels}\n            />\n          </div>\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default ProfessorCard;\n"]},"metadata":{},"sourceType":"module"}