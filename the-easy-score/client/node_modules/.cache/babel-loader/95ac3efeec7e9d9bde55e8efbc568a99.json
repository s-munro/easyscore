{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useMemo } from \"react\";\n\nconst usePagination = ({\n  count,\n  page,\n  rowsPerPage,\n  rowsPerPageOptions\n}) => {\n  _s();\n\n  const pageCount = useMemo(() => {\n    return Math.ceil(count / rowsPerPage);\n  }, [count, rowsPerPage]);\n  const pages = useMemo(() => {\n    const value = Array.from(new Array(pageCount), (_, k) => k + 1);\n\n    if (page < 3) {\n      return value.slice(0, 5);\n    }\n\n    if (pageCount - page < 3) {\n      return value.slice(-5);\n    }\n\n    return value.slice(parseInt(page) - 3, parseInt(page) + 2);\n  }, [page, pageCount]);\n  const showFirst = useMemo(() => {\n    return page > 3;\n  }, [page]);\n  const showNext = useMemo(() => {\n    return pageCount - page > 0;\n  }, [page, pageCount]);\n  const showLast = useMemo(() => {\n    return pageCount - page > 2;\n  }, [page, pageCount]);\n  const showPages = useMemo(() => {\n    return pages.length !== 1;\n  }, [pages.length]);\n  const showPagination = useMemo(() => {\n    return count >= Math.min(...rowsPerPageOptions);\n  }, [count, rowsPerPageOptions]);\n  const showPrevious = useMemo(() => {\n    return page > 1;\n  }, [page]);\n  return {\n    pageCount,\n    pages,\n    showFirst,\n    showNext,\n    showLast,\n    showPages,\n    showPagination,\n    showPrevious\n  };\n};\n\n_s(usePagination, \"or4kEqCG0Nbh8zPnvf6yx6mG4q0=\");\n\nexport default usePagination;","map":{"version":3,"sources":["/Users/sam4munro/Desktop/webdev/portfolio/easyscore/the-easy-score/src/hooks/usePagination.js"],"names":["useMemo","usePagination","count","page","rowsPerPage","rowsPerPageOptions","pageCount","Math","ceil","pages","value","Array","from","_","k","slice","parseInt","showFirst","showNext","showLast","showPages","length","showPagination","min","showPrevious"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,OAAxB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,WAAf;AAA4BC,EAAAA;AAA5B,CAAD,KAAsD;AAAA;;AAC1E,QAAMC,SAAS,GAAGN,OAAO,CAAC,MAAM;AAC9B,WAAOO,IAAI,CAACC,IAAL,CAAUN,KAAK,GAAGE,WAAlB,CAAP;AACD,GAFwB,EAEtB,CAACF,KAAD,EAAQE,WAAR,CAFsB,CAAzB;AAIA,QAAMK,KAAK,GAAGT,OAAO,CAAC,MAAM;AAC1B,UAAMU,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAW,IAAID,KAAJ,CAAUL,SAAV,CAAX,EAAiC,CAACO,CAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAG,CAA/C,CAAd;;AAEA,QAAIX,IAAI,GAAG,CAAX,EAAc;AACZ,aAAOO,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAP;AACD;;AAED,QAAIT,SAAS,GAAGH,IAAZ,GAAmB,CAAvB,EAA0B;AACxB,aAAOO,KAAK,CAACK,KAAN,CAAY,CAAC,CAAb,CAAP;AACD;;AAED,WAAOL,KAAK,CAACK,KAAN,CAAYC,QAAQ,CAACb,IAAD,CAAR,GAAiB,CAA7B,EAAgCa,QAAQ,CAACb,IAAD,CAAR,GAAiB,CAAjD,CAAP;AACD,GAZoB,EAYlB,CAACA,IAAD,EAAOG,SAAP,CAZkB,CAArB;AAcA,QAAMW,SAAS,GAAGjB,OAAO,CAAC,MAAM;AAC9B,WAAOG,IAAI,GAAG,CAAd;AACD,GAFwB,EAEtB,CAACA,IAAD,CAFsB,CAAzB;AAIA,QAAMe,QAAQ,GAAGlB,OAAO,CAAC,MAAM;AAC7B,WAAOM,SAAS,GAAGH,IAAZ,GAAmB,CAA1B;AACD,GAFuB,EAErB,CAACA,IAAD,EAAOG,SAAP,CAFqB,CAAxB;AAIA,QAAMa,QAAQ,GAAGnB,OAAO,CAAC,MAAM;AAC7B,WAAOM,SAAS,GAAGH,IAAZ,GAAmB,CAA1B;AACD,GAFuB,EAErB,CAACA,IAAD,EAAOG,SAAP,CAFqB,CAAxB;AAIA,QAAMc,SAAS,GAAGpB,OAAO,CAAC,MAAM;AAC9B,WAAOS,KAAK,CAACY,MAAN,KAAiB,CAAxB;AACD,GAFwB,EAEtB,CAACZ,KAAK,CAACY,MAAP,CAFsB,CAAzB;AAIA,QAAMC,cAAc,GAAGtB,OAAO,CAAC,MAAM;AACnC,WAAOE,KAAK,IAAIK,IAAI,CAACgB,GAAL,CAAS,GAAGlB,kBAAZ,CAAhB;AACD,GAF6B,EAE3B,CAACH,KAAD,EAAQG,kBAAR,CAF2B,CAA9B;AAIA,QAAMmB,YAAY,GAAGxB,OAAO,CAAC,MAAM;AACjC,WAAOG,IAAI,GAAG,CAAd;AACD,GAF2B,EAEzB,CAACA,IAAD,CAFyB,CAA5B;AAIA,SAAO;AACLG,IAAAA,SADK;AAELG,IAAAA,KAFK;AAGLQ,IAAAA,SAHK;AAILC,IAAAA,QAJK;AAKLC,IAAAA,QALK;AAMLC,IAAAA,SANK;AAOLE,IAAAA,cAPK;AAQLE,IAAAA;AARK,GAAP;AAUD,CArDD;;GAAMvB,a;;AAuDN,eAAeA,aAAf","sourcesContent":["import { useMemo } from \"react\";\n\nconst usePagination = ({ count, page, rowsPerPage, rowsPerPageOptions }) => {\n  const pageCount = useMemo(() => {\n    return Math.ceil(count / rowsPerPage);\n  }, [count, rowsPerPage]);\n\n  const pages = useMemo(() => {\n    const value = Array.from(new Array(pageCount), (_, k) => k + 1);\n\n    if (page < 3) {\n      return value.slice(0, 5);\n    }\n\n    if (pageCount - page < 3) {\n      return value.slice(-5);\n    }\n\n    return value.slice(parseInt(page) - 3, parseInt(page) + 2);\n  }, [page, pageCount]);\n\n  const showFirst = useMemo(() => {\n    return page > 3;\n  }, [page]);\n\n  const showNext = useMemo(() => {\n    return pageCount - page > 0;\n  }, [page, pageCount]);\n\n  const showLast = useMemo(() => {\n    return pageCount - page > 2;\n  }, [page, pageCount]);\n\n  const showPages = useMemo(() => {\n    return pages.length !== 1;\n  }, [pages.length]);\n\n  const showPagination = useMemo(() => {\n    return count >= Math.min(...rowsPerPageOptions);\n  }, [count, rowsPerPageOptions]);\n\n  const showPrevious = useMemo(() => {\n    return page > 1;\n  }, [page]);\n\n  return {\n    pageCount,\n    pages,\n    showFirst,\n    showNext,\n    showLast,\n    showPages,\n    showPagination,\n    showPrevious,\n  };\n};\n\nexport default usePagination;\n"]},"metadata":{},"sourceType":"module"}