{"ast":null,"code":"import _toConsumableArray from\"/Users/sam4munro/Desktop/webdev/portfolio/easyscore/the-easy-score/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{useMemo}from\"react\";var usePagination=function usePagination(_ref){var count=_ref.count,page=_ref.page,rowsPerPage=_ref.rowsPerPage,rowsPerPageOptions=_ref.rowsPerPageOptions;var pageCount=useMemo(function(){return Math.ceil(count/rowsPerPage);},[count,rowsPerPage]);var pages=useMemo(function(){var value=Array.from(new Array(pageCount),function(_,k){return k+1;});if(page<3){return value.slice(0,5);}if(pageCount-page<3){return value.slice(-5);}return value.slice(parseInt(page)-3,parseInt(page)+2);},[page,pageCount]);var showFirst=useMemo(function(){return page>3;},[page]);var showNext=useMemo(function(){return pageCount-page>0;},[page,pageCount]);var showLast=useMemo(function(){return pageCount-page>2;},[page,pageCount]);var showPages=useMemo(function(){return pages.length!==1;},[pages.length]);var showPagination=useMemo(function(){return count>=Math.min.apply(Math,_toConsumableArray(rowsPerPageOptions));},[count,rowsPerPageOptions]);var showPrevious=useMemo(function(){return page>1;},[page]);return{pageCount:pageCount,pages:pages,showFirst:showFirst,showNext:showNext,showLast:showLast,showPages:showPages,showPagination:showPagination,showPrevious:showPrevious};};export default usePagination;","map":{"version":3,"sources":["/Users/sam4munro/Desktop/webdev/portfolio/easyscore/the-easy-score/src/hooks/usePagination.js"],"names":["useMemo","usePagination","count","page","rowsPerPage","rowsPerPageOptions","pageCount","Math","ceil","pages","value","Array","from","_","k","slice","parseInt","showFirst","showNext","showLast","showPages","length","showPagination","min","showPrevious"],"mappings":"iMAAA,OAASA,OAAT,KAAwB,OAAxB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAsD,IAAnDC,CAAAA,KAAmD,MAAnDA,KAAmD,CAA5CC,IAA4C,MAA5CA,IAA4C,CAAtCC,WAAsC,MAAtCA,WAAsC,CAAzBC,kBAAyB,MAAzBA,kBAAyB,CAC1E,GAAMC,CAAAA,SAAS,CAAGN,OAAO,CAAC,UAAM,CAC9B,MAAOO,CAAAA,IAAI,CAACC,IAAL,CAAUN,KAAK,CAAGE,WAAlB,CAAP,CACD,CAFwB,CAEtB,CAACF,KAAD,CAAQE,WAAR,CAFsB,CAAzB,CAIA,GAAMK,CAAAA,KAAK,CAAGT,OAAO,CAAC,UAAM,CAC1B,GAAMU,CAAAA,KAAK,CAAGC,KAAK,CAACC,IAAN,CAAW,GAAID,CAAAA,KAAJ,CAAUL,SAAV,CAAX,CAAiC,SAACO,CAAD,CAAIC,CAAJ,QAAUA,CAAAA,CAAC,CAAG,CAAd,EAAjC,CAAd,CAEA,GAAIX,IAAI,CAAG,CAAX,CAAc,CACZ,MAAOO,CAAAA,KAAK,CAACK,KAAN,CAAY,CAAZ,CAAe,CAAf,CAAP,CACD,CAED,GAAIT,SAAS,CAAGH,IAAZ,CAAmB,CAAvB,CAA0B,CACxB,MAAOO,CAAAA,KAAK,CAACK,KAAN,CAAY,CAAC,CAAb,CAAP,CACD,CAED,MAAOL,CAAAA,KAAK,CAACK,KAAN,CAAYC,QAAQ,CAACb,IAAD,CAAR,CAAiB,CAA7B,CAAgCa,QAAQ,CAACb,IAAD,CAAR,CAAiB,CAAjD,CAAP,CACD,CAZoB,CAYlB,CAACA,IAAD,CAAOG,SAAP,CAZkB,CAArB,CAcA,GAAMW,CAAAA,SAAS,CAAGjB,OAAO,CAAC,UAAM,CAC9B,MAAOG,CAAAA,IAAI,CAAG,CAAd,CACD,CAFwB,CAEtB,CAACA,IAAD,CAFsB,CAAzB,CAIA,GAAMe,CAAAA,QAAQ,CAAGlB,OAAO,CAAC,UAAM,CAC7B,MAAOM,CAAAA,SAAS,CAAGH,IAAZ,CAAmB,CAA1B,CACD,CAFuB,CAErB,CAACA,IAAD,CAAOG,SAAP,CAFqB,CAAxB,CAIA,GAAMa,CAAAA,QAAQ,CAAGnB,OAAO,CAAC,UAAM,CAC7B,MAAOM,CAAAA,SAAS,CAAGH,IAAZ,CAAmB,CAA1B,CACD,CAFuB,CAErB,CAACA,IAAD,CAAOG,SAAP,CAFqB,CAAxB,CAIA,GAAMc,CAAAA,SAAS,CAAGpB,OAAO,CAAC,UAAM,CAC9B,MAAOS,CAAAA,KAAK,CAACY,MAAN,GAAiB,CAAxB,CACD,CAFwB,CAEtB,CAACZ,KAAK,CAACY,MAAP,CAFsB,CAAzB,CAIA,GAAMC,CAAAA,cAAc,CAAGtB,OAAO,CAAC,UAAM,CACnC,MAAOE,CAAAA,KAAK,EAAIK,IAAI,CAACgB,GAAL,OAAAhB,IAAI,oBAAQF,kBAAR,EAApB,CACD,CAF6B,CAE3B,CAACH,KAAD,CAAQG,kBAAR,CAF2B,CAA9B,CAIA,GAAMmB,CAAAA,YAAY,CAAGxB,OAAO,CAAC,UAAM,CACjC,MAAOG,CAAAA,IAAI,CAAG,CAAd,CACD,CAF2B,CAEzB,CAACA,IAAD,CAFyB,CAA5B,CAIA,MAAO,CACLG,SAAS,CAATA,SADK,CAELG,KAAK,CAALA,KAFK,CAGLQ,SAAS,CAATA,SAHK,CAILC,QAAQ,CAARA,QAJK,CAKLC,QAAQ,CAARA,QALK,CAMLC,SAAS,CAATA,SANK,CAOLE,cAAc,CAAdA,cAPK,CAQLE,YAAY,CAAZA,YARK,CAAP,CAUD,CArDD,CAuDA,cAAevB,CAAAA,aAAf","sourcesContent":["import { useMemo } from \"react\";\n\nconst usePagination = ({ count, page, rowsPerPage, rowsPerPageOptions }) => {\n  const pageCount = useMemo(() => {\n    return Math.ceil(count / rowsPerPage);\n  }, [count, rowsPerPage]);\n\n  const pages = useMemo(() => {\n    const value = Array.from(new Array(pageCount), (_, k) => k + 1);\n\n    if (page < 3) {\n      return value.slice(0, 5);\n    }\n\n    if (pageCount - page < 3) {\n      return value.slice(-5);\n    }\n\n    return value.slice(parseInt(page) - 3, parseInt(page) + 2);\n  }, [page, pageCount]);\n\n  const showFirst = useMemo(() => {\n    return page > 3;\n  }, [page]);\n\n  const showNext = useMemo(() => {\n    return pageCount - page > 0;\n  }, [page, pageCount]);\n\n  const showLast = useMemo(() => {\n    return pageCount - page > 2;\n  }, [page, pageCount]);\n\n  const showPages = useMemo(() => {\n    return pages.length !== 1;\n  }, [pages.length]);\n\n  const showPagination = useMemo(() => {\n    return count >= Math.min(...rowsPerPageOptions);\n  }, [count, rowsPerPageOptions]);\n\n  const showPrevious = useMemo(() => {\n    return page > 1;\n  }, [page]);\n\n  return {\n    pageCount,\n    pages,\n    showFirst,\n    showNext,\n    showLast,\n    showPages,\n    showPagination,\n    showPrevious,\n  };\n};\n\nexport default usePagination;\n"]},"metadata":{},"sourceType":"module"}